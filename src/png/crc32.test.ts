import { describe, expect, test } from 'vitest'
import { crc32 } from './crc32.ts'

describe('crc32', () => {
  test('with reference sums should return correct results', () => {
    const base = new TextEncoder().encode('6R~$h>FJlyaTzp Qrm%sej7`ZXLNk2qt(|1,HUgA!SDE?3]B5<oY^i4O)@:#bGC-')
    // based on php crc32
    const expectedSums = [
      0,
      498629140,
      1302377298,
      3768001501,
      377696790,
      1705586820,
      4191362095,
      3868583277,
      2012139267,
      259554699,
      2176713920,
      1934803703,
      2645446429,
      21607737,
      3707985676,
      3758587953,
      2672855381,
      2006387311,
      1014700459,
      3627956915,
      1237193479,
      1912033770,
      1070308348,
      3733667630,
      1136134181,
      318454568,
      2182440330,
      2693242221,
      1891965282,
      2880344624,
      1017585715,
      1257007121,
      4019230258,
      797935201,
      2972388562,
      3954210627,
      266609459,
      366650138,
      880044335,
      2855359046,
      1288457084,
      3348369039,
      1570825596,
      4200462326,
      2156941388,
      462315355,
      2440071352,
      49514994,
      425832328,
      1741373715,
      2041846165,
      2400403606,
      3646301164,
      4155796238,
      19115805,
      2427540558,
      2778033743,
      1987493518,
      2930275972,
      4269136240,
      547265050,
      2365360153,
      1583181814,
      1767372257
    ]

    const sums = []
    for (let i = 0; i < 64; i++) {
      sums.push(crc32(base.subarray(0, i)))
    }

    expect(sums).toStrictEqual(expectedSums)
  })
})
